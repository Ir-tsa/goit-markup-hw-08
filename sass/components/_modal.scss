.backdrop {
  position: fixed;
  width: 100%;
  height: 100%;

  top: 0px;
  left: 0px;

  background-color: rgba(0, 0, 0, 0.2);
  z-index: 1;

  opacity: 1;
  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);

  padding: 93px 15px 94px 15px;
  overflow-y: scroll;
}

.backdrop.is-hidden {
  opacity: 0;
  pointer-events: none;

  .modal {
    transform: translate(-50%, -50%) scale(0.7) rotate(0deg);
    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);
  }
}

.modal {
  position: relative;
  background-color: $white;
  font-size: 12px;
  letter-spacing: 0.01em;
  line-height: 1.17;
  padding: 40px;

  @media screen and (min-width: 481px) {
    position: absolute;
    top: 50%;
    left: 50%;

    max-width: 450px;
    width: 100%;
    // min-height: 608px;

    transform: translate(-50%, -50%) scale(1);
    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  @media screen and (min-width: 1200px) {
    max-width: 528px;
    // min-height: 581px;
  }

  &-title {
    font-weight: bold;
    font-size: 20px;
    line-height: 1.5;
    text-align: center;
    letter-spacing: 0.03em;
    color: $title-text-color;

    @media screen and (min-width: 1200px) {
      line-height: 1.15;
    }
  }

  &-forms {
    padding: 0px;

    @media screen and (min-width: 1200px) {
      min-width: 448px;
      margin-top: 0px;
      margin-bottom: 20px;
      margin-top: 12px;
    }
  }
}

.modal-close {
  position: absolute;
  right: 8px;
  top: 8px;
  width: 30px;
  height: 30px;
  background-color: $white;
  border-radius: 50%;
  border: 1px solid rgba(0, 0, 0, 0.1);
  padding: 0px;

  &:hover,
  &:focus {
    fill: $accent-color;
  }
}

.icon-close {
  display: flex;
  align-items: center;
  justify-content: center;
}

textarea {
  resize: none;
}

.field-form {
  position: relative;
  display: flex;
  flex-direction: column;
  text-align: start;
  margin-bottom: 20px;
  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);

  @media screen and (min-width: 1200px) {
    margin-bottom: 10px;
  }

  &:focus-within {
    color: $accent-color;
    border-color: $accent-color;
    fill: $accent-color;
  }

  &-checkbox {
    letter-spacing: 0.03em;
    font-size: 12px;
    line-height: 1.17;
    margin-bottom: 30px;

    @media screen and (min-width: 1200px) {
      font-size: 14px;
      line-height: 1.71;
    }
  }
}

.field-form .input-form {
  margin-top: 4px;
  padding: 11px 42px 11px;
  border: 1px solid rgba(33, 33, 33, 0.2);
  border-radius: 4px;

  &:focus-within {
    border: 1px solid $accent-color;
    border-radius: 4px;
    outline: 0px;
  }
}

/* .field-form:hover .input-form,
.field-form:focus .input-form {
  border: 1px solid $accent-color;
  border-radius: 4px;
}
  .field-form:hover .icon-user-name {
    fill: $accent-color;
  } */

.field-form .textarea-form {
  padding: 12px 16px;
  border: 1px solid rgba(33, 33, 33, 0.2);
  border-radius: 4px;
  margin-top: 4px;

  @media screen and (min-width: 1200px) {
    padding: 11px 12px 11px;
  }

  &:focus-within {
    border: 1px solid $accent-color;
    border-radius: 4px;
    outline: 0px;
  }

  &::placeholder {
    color: rgba(117, 117, 117, 0.5);
    font-family: Roboto;
    font-style: normal;
    font-weight: normal;
  }
}

.icon-form {
  position: absolute;
  bottom: 11px;
  left: 12px;
}

.link-field-form {
  color: $accent-color;
}

.checkbox-label {
  display: flex;
  align-items: center;
  justify-content: center;
}

.checkbox {
  /* -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  position: absolute; */

  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0px;
  padding: 0px;
  clip: rect(0 0 0 0);
  overflow: hidden;

  &-icon {
    display: inline-block;
    width: 16px;
    height: 15px;
    border: 2px solid $title-text-color;
    border-radius: 2px;
    margin-right: 7px;
  }
}

.checkbox:checked + .checkbox-icon {
  background-color: $accent-color;
  background-image: url("../images/icon-check.svg");
  background-size: contain;
  background-origin: border-box;
  border-color: transparent;
}
